//Лабораторная 8, задача 1. Выполнена: Климкович Н. В.

/*Разработать программу в соответствии с вариантом, реализующую
работу со структурами в консольном приложении.
Использовать динамический массив структур, содержащий поля согласно
варианту индивидуального задания.
Программа должна содержать необходимые комментарии.
Следует ввод/вывод на экран входных и выходных данных. Для
форматированного ввода-вывода использовать scanf и printf, предусмотреть
некорректный ввод. Обрабатываемая структура должна иметь не менее пяти
полей (элементов) двух и более типов (если в задании указано меньше -
добавить). В каждом варианте задания реализовать следующие функции
для работы со структурой:
1. Функцию формирования динамического одномерного массива структур,
значения которых вводятся с клавиатуры. Предусмотреть возможность
заполнения одного поля структуры, используя известные значения других полей
структуры (придумать самим). С массивом структур работать через оператор new.
При вводе структур необходимо реализовать следующие механизмы:
• ввод заранее заданного количества структур;
• ввод до появления структуры с заданным признаком;
• диалог с пользователем о необходимости продолжать ввод.
2. Функцию просмотра содержимого динамического массива структур.
3. Функцию дополнения уже существующего массива структур новыми
структурами.
4. Функцию поиска и вывода на экран структуры (структур) с заданным
значением элемента.
5. Функции удаления и изменения элемента массива структур с заданным
значением элемента.
6. Функцию упорядочения массива структур по одному из полей
(элементов). Поле для сортировки выбрать самим. Способ указан в скобках.


Вариант 9: Различные цеха завода выпускают продукцию нескольких наименований.
Сведения о выпущенной продукции включают наименование, количество, номер
цеха. Для заданного цеха вывести количество выпущенных изделий (Шейкер
сортировка по убыванию).*/

#include <iostream>
#include <cmath>
#include <string>
#include <Windows.h>
using namespace std;

void clear_m() {
	cin.clear();
	cin.ignore(9999, '\n');
}
void error(int a) {
	clear_m();
	cout << "\nВведите корректное значение: ";
	cin >> a;
}
struct Cex {
	string name;
	int amount = 0;
	short number = 0;
};
void shekerSort(Cex mass[], int count)
{
	Cex t;
	int left = 0, right = count - 1; // левая и правая границы сортируемой области массива
	int flag = 1;  // флаг наличия перемещений
	// Выполнение цикла пока левая граница не сомкнётся с правой
	// и пока в массиве имеются перемещения
	while ((left < right) && flag > 0)
	{
		flag = 0;
		for (int i = left; i < right; i++)  //двигаемся слева направо
		{
			if (mass[i].name[0] > mass[i + 1].name[0]) // если следующий элемент меньше текущего,
			{             // меняем их местами
				t = mass[i];
				mass[i] = mass[i + 1];
				mass[i + 1] = t;
				flag = 1;      // перемещения в этом цикле были
			}
		}
		right--; // сдвигаем правую границу на предыдущий элемент
		for (int i = right; i > left; i--)  //двигаемся справа налево
		{
			if (mass[i - 1].name[0] > mass[i].name[0]) // если предыдущий элемент больше текущего,
			{            // меняем их местами
				t = mass[i];
				mass[i] = mass[i - 1];
				mass[i - 1] = t;
				flag = 1;    // перемещения в этом цикле были
			}
		}
		left++; // сдвигаем левую границу на следующий элемент
	}
}
bool correct(string a) {
	for (int u = 0; u < a.length(); u++)
		if (a[u] < 'a' && a[u]>'Z' || a[u] < 'A' || a[u]>'z')
			return 1;
	return 0;
}

int main() {
	setlocale(LC_ALL, "Russian");
	int m;
	bool b = 0;
	cout << "Количество цехов: ";
	cin >> m;
	while (cin.fail() || m < 1) {
		clear_m();
		cout << "\nВведите корректное значение: ";
		cin >> m;
	}
	Cex* ceh = new Cex[m];

	for (int y = 0; y < m; y++) {
		b = 0;
		clear_m();
		cout << "\nЦех " << y+1 << "\nНаименование изделия: ";
		getline(cin, ceh[y].name);
		b = correct(ceh[y].name);
		while (ceh[y].name.length() == 0 || b) {
			b = 0;
			cout << "Введите корректное значение: ";
			getline(cin, ceh[y].name);
			b = correct(ceh[y].name);
		}

		cout << "Количество: ";
		cin >> ceh[y].amount;
		while (cin.fail() || ceh[y].amount < 1) {
			clear_m();
			cout << "Введите корректное значение: ";
			cin >> ceh[y].amount;
		}
		ceh[y].number = y+1;
	}
	
	shekerSort(ceh, 5);
	cout << "\n\nОтсортированный список:\n\n";
	for (int y = 0; y < m; y++) cout << ceh[y].name << ", " << ceh[y].amount << " шт.; " << "Цех " << ceh[y].number << '\n';
}